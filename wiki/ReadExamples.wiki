= Read Examples =

Mongrel has the following functions for reading documents:
 * `count/1`
 * `count/2`
 * `find/1`
 * `find/2`
 * `find/3`
 * `find/4`
 * `find_one/1`
 * `find_one/2`
 * `find_one/3`
 
==Counting Documents==
The example code below shows how to count all the books written by Edmund Wells.

<pre>
10> f().
ok 
11> {ok,Conn}=mongo:connect(localhost).
{ok,{connection,{"localhost",27017},<0.68.0>,infinity}}
12> mongrel:do(safe, master, Conn, mongrel_books, fun() ->  
12> EdmundWells = mongrel:find_one(#author{first_name= <<"Edmund">>, last_name= <<"Wells">>}),
12> mongrel:count(#book{author=EdmundWells})  
12> end).       
{ok,2}
</pre>

Using the Mongrel API to find all the books not written by Edmund Wells is more complicated, and we have to use a '$ne' QueryConditional

<pre>
10> mongrel:do(safe, master, Conn, mongrel_books, fun() -> 
10> EdmundWells = mongrel:find_one(#author{first_name= <<"Edmund">>, last_name= <<"Wells">>}),
10> mongrel:count(#book{author=#author{'_id'={'$ne', EdmundWells#author.'_id'}}})             
10> end).
{ok,4}    
</pre>

That query may be seen as so complicated that it may be simpler use the `mongo` count/2 function instead. Contrast the above code with the code below.

<pre>
11> mongrel:do(safe, master, Conn, mongrel_books, fun() -> 
11> EdmundWells=mongrel:find_one(#author{first_name= <<"Edmund">>, last_name= <<"Wells">>}),
11> mongo:count(book, {'author.#id', {'$ne', EdmundWells#author.'_id'}})
11> end).   
{ok,4}
</pre>